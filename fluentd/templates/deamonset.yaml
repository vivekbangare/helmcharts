apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: { { .Release.Name } }
  namespace: { { .Release.Namespace } }
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: fluentd
          image: fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1
          command:
            - fluentd
            - -c
            - /fluentd/etc/fluent.conf
          env:
            - name: FLUENT_ELASTICSEARCH_HOST
              value:
                { { .Values.elasticSearch.hostPath | default "elasticsearch" } }
            - name: FLUENT_ELASTICSEARCH_PORT
              value: { { .Values.elasticSearch.port | default "9200" | quote } }
            - name: FLUENT_ELASTICSEARCH_SCHEME
              value: "http"
            - name: fluentd_SYSTEMD_CONF
              value: "disable"
            - name: FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX
              value:
                {
                  {
                    required "Please provide clustername using parameter --set clustername=CLUSTERNAME " .Values.clustername | lower,
                  },
                }
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: config-fluentd
              mountPath: /fluentd/etc
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: config-fluentd
          configMap:
            name: "{{ .Release.Name }}-config"
